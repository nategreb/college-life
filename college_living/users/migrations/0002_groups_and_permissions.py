# Generated by Django 4.0.4 on 2022-06-29 02:02

from django.contrib.contenttypes.models import ContentType
from django.db import migrations
from colleges.models import College
from django.contrib.auth.models import Group, Permission

"""
Data migration for adding User groups and associated college permissions
"""
def add_college_crud_to_user_groups(apps, schema_editor):
    #add the different groups users can be
    admins   = Group.objects.get_or_create(name='Admin')[0]
    mods     = Group.objects.get_or_create(name='Mods')[0]
    regulars = Group.objects.get_or_create(name='Regular User')[0]


    colleges_permissions = Permission.objects.filter(content_type_id=7)
    
    #adding ALL colleges CRUD permissions only to mods and admins.
    for perm in colleges_permissions:
        #can view all colleges
        if perm.codename == 'view_college':
            mods.permissions.add(perm)
            admins.permissions.add(perm)
        else:
            admins.permissions.add(perm)

    content_type = ContentType.objects.get_for_model(College)
    #add change permission for mods designated college 
    Permission.objects.create(
        name='Change my college',
        codename='change_my_college',
        content_type=content_type
    )
    
def reverse_add_college_crud_to_user_groups(apps, schema_editor):
    Permission.objects.get(codename='change_my_college').delete()
    Group.objects.get(name='Admin').delete()
    Group.objects.get(name='Mods').delete()
    Group.objects.get(name='Regular User').delete()

#migration to add permissions and groups for different User types
class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            add_college_crud_to_user_groups,
            reverse_code=reverse_add_college_crud_to_user_groups
        )
    ]